# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "8"
        dotnet-quality: preview

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Build
      run: dotnet publish

    - name: Extract App Version
      run: $version = (Select-Xml -Path Servel.NET\Servel.NET.csproj -XPath '//Version[1]/text()[1]').Node.InnerText; "APP_VERSION=$version" >> "$env:GITHUB_ENV"

    - name: Prepare Setup Script
      run: |
        $iss = (Get-Content Setup\Setup.iss)
        $iss = $iss -replace '^(#define MyAppVersion ").*?(")$',"`$1${env:APP_VERSION}`$2"
        Set-Content -Path Setup/Setup.iss -Value $iss

    - name: Compile Setup
      run: iscc.exe Setup/Setup.iss

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: |
          Servel.NET/bin/x64/Release/win-x64/publish/*
          Setup/bin/*

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: true
        tag_name: v${{ env.APP_VERSION }}
        files: |
          Servel.NET/bin/x64/Release/win-x64/publish/*
          Setup/bin/*
